apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cd-pipeline
spec:
  workspaces:
    - name: pipeline-workspace
  params:
    - name: repo-url
      description: The URL of the Git repository to clone
      type: string
    - name: branch
      description: The branch of the Git repository to clone
      type: string
    - name: build-image
      description: The name of the image to build and push
      type: string
  tasks:
    - name: init
      taskRef:
        name: cleanup
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: clone
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.branch)
      workspaces:
        - name: output
          workspace: pipeline-workspace
          subPath: source
    - name: echo
      taskRef:
        name: echo
      params:
        - name: message
          value: "Code has been cloned successfully!"
      runAfter:
        - clone
    - name: lint
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: flake8
      params:
        - name: image
          value: "python:3.9-slim"
        - name: args
          value: ["--count","--max-complexity=10","--max-line-length=127","--statistics"]
      runAfter:
        - clone
    - name: tests
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: nose
      params:
        - name: args
          value: "-v --with-spec --spec-color"
      runAfter:
        - clone
    - name: build
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
        - name: IMAGE
          value: "$(params.build-image)"
      runAfter:
        - tests
        - lint
    - name: deploy
      workspaces:
        - name: manifest-dir
          workspace: pipeline-workspace
      taskRef:
        name: openshift-client
        kind: ClusterTask
      params:
      - name: SCRIPT
        value: |
          echo "Updating manifest..."
          sed -i "s|IMAGE_NAME_HERE|$(params.build-image)|g" deploy/deployment.yaml
          cat deploy/deployment.yaml
          echo "Deploying to OpenShift..."
          oc apply -f deploy/
          oc get pods -l app=accounts
      runAfter:
        - build